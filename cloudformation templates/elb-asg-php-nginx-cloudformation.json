{
  "Description" : "Standard AutoScaling Group + LoadBalancer + Maintenance Queue + SNS Topic Notification",

  "Parameters" : {
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro","t2.medium","m3.medium","m3.large","m3.xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "WebServerPort" : {
      "Description" : "The TCP port for the Web Server",
      "Type" : "Number",
      "Default" : "80"
    },
    "KeyName" : {
      "Description" : "The EC2 Key Pair to allow SSH access to the instances",
      "Type" : "String"
    },
    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
   },
    "ZoneApex" : {
      "Description" : "Root Domain Name",
      "Type" : "String"
    },
    "SubDomain" : {
      "Description" : "SubDomain of Stack",
      "Type" : "String"
    },
    "Repo" : {
      "Description" : "Github repository",
      "Type" : "String"
    },
    "Branch" : {
      "Description" : "Github Branch",
      "Type" : "String"
    },
    "Environment" : {
      "Description" : "Environment",
      "Type" : "String"
    }
   
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "64" },
      "t2.medium"   : { "Arch" : "64" },
      "m3.medium"   : { "Arch" : "64" },
      "m3.large"    : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64" : "ami-b66ed3de" },
      "us-west-2"      : { "64" : "ami-b5a7ea85" }
    }
  },

  "Resources" : {
    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : ""},
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "HealthCheckType" : "ELB",
        "HealthCheckGracePeriod" : "250",
        "MinSize" : "1",
        "MaxSize" : "3",
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "Tags" : [{"Key" : "repo", "Value" : { "Ref": "Repo" }, "PropagateAtLaunch" : "True"},
        {"Key" : "branch", "Value" : { "Ref": "Branch" }, "PropagateAtLaunch" : "True"}, {"Key" : "environment", "Value" : { "Ref": "Environment" }, "PropagateAtLaunch" : "True"}, {"Key" : "maintenance-queue", "Value" : {"Fn::GetAtt" : ["MaintenanceQueue", "QueueName"]}, "PropagateAtLaunch" : "True"}, {"Key" : "layer", "Value" : { "Ref": "Branch" }, "PropagateAtLaunch" : "True"}
        ]
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "IamInstanceProfile" : { "Fn::Join" : [ "", [ { "Ref" : "Repo" }, "-", { "Ref" : "Environment" } ] ]},
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" },
                                          "Arch" ] } ] },
        "UserData" : "I2Nsb3VkLWNvbmZpZw0KcmVwb191cGRhdGU6IHRydWUNCnJlcG9fdXBncmFkZTogYWxsDQoNCnBhY2thZ2VzOg0KIC0gbmdpbngNCiAtIGpxDQogLSBjcnlwdG8tdXRpbHMNCiAtIHBocDU1LWZwbQ0KIC0gcGhwNTUtbXlzcWxuZCANCiAtIGdpdCANCg0KDQpydW5jbWQ6DQogLSBbIHNoLCAtYywgIm1rZGlyIC9ldGMvY29uZmlnIl0NCiAtIFsgc2gsIC1jLCAibWtkaXIgL3Zhci93d3ciXQ0KIC0gWyBzaCwgLWMsICJta2RpciAvdmFyL3d3dy9odG1sIl0NCiAtIFsgc2gsIC1jLCAiYXdzIHMzIGNwIHMzOi8vcHJvb3ZlY2xvdWQtY29uZmlnL2NvbmZpZ19kbC5zaCAvZXRjL2NvbmZpZy8iIF0NCiAtIFsgc2gsIC1jLCAiY2htb2QgNzU1IC9ldGMvY29uZmlnLyouc2giIF0NCiAtIFsgc2gsIC1jLCAiL2V0Yy9jb25maWcvY29uZmlnX2RsLnNoIC9ldGMvY29uZmlnIiBdDQogLSBbIHNoLCAtYywgImF3cyBzMyBjcCBzMzovL3Byb292ZWNsb3VkLWNvbmZpZy9uZ2lueC5jb25mIC9ldGMvbmdpbngvIiBdDQogLSBlYXN5X2luc3RhbGwgZmxhc2sNCiAtIHNlcnZpY2Ugbmdpbnggc3RhcnQNCiAtIGNoa2NvbmZpZyBuZ2lueCBvbg0KIC0gc2VydmljZSBwaHAtZnBtLTUuNSBzdGFydA0KIC0gY2hrY29uZmlnIHBocC1mcG0tNS41IG9uDQogLSBncm91cGFkZCB3d3cNCiAtIFsgc2gsIC1jLCAidXNlcm1vZCAtYSAtRyB3d3cgZWMyLXVzZXIiIF0NCiAtIFsgc2gsIC1jLCAidXNlcm1vZCAtYSAtRyB3d3cgYXBhY2hlIiBdDQogLSBbIHNoLCAtYywgImNob3duIC1SIHJvb3Q6d3d3IC92YXIvd3d3L2h0bWwiIF0NCiAtIGNobW9kIDI3NzUgL3Zhci93d3cvaHRtbA0KIC0gWyBmaW5kLCAvdmFyL3d3dy9odG1sLCAtdHlwZSwgZCwgLWV4ZWMsIGNobW9kLCAyNzc1LCB7fSwgKyBdDQogLSBbIGZpbmQsIC92YXIvd3d3L2h0bWwsIC10eXBlLCBmLCAtZXhlYywgY2htb2QsIDA2NjQsIHt9LCArIF0NCiAtIFsgc2gsIC1jLCAnZWNobyAiPD9waHAgcGhwaW5mbygpOyA/PiIgPi92YXIvd3d3L2h0bWwvcGhwdGVzdC5waHAnIF0NCm91dHB1dCA6IHsgYWxsIDogJ3wgdGVlIC1hIC92YXIvbG9nL2Nsb3VkLWluaXQtb3V0cHV0LmxvZycgfQ==",
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "InstanceType" : { "Ref" : "InstanceType" }
      }
    },

    "WebServerScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "1"
      }
    },
    "WebServerScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "-1"
      }
    },

    "CPUAlarmHigh": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "90",
        "AlarmActions": [ { "Ref": "WebServerScaleUpPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold"
      }
    },
    "CPUAlarmLow": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "70",
        "AlarmActions": [ { "Ref": "WebServerScaleDownPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "LessThanThreshold"
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : { "Ref" : "WebServerPort" },
          "Protocol" : "HTTP"
        } ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : [ "", ["HTTP:", { "Ref" : "WebServerPort" }, "/phptest.php"]]},
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "30",
          "Timeout" : "5"
        }
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access and HTTP from the load balancer only",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : { "Ref" : "SSHLocation"}
        },
        {
          "IpProtocol" : "tcp",
          "FromPort" : { "Ref" : "WebServerPort" },
          "ToPort" : { "Ref" : "WebServerPort" },
          "SourceSecurityGroupOwnerId" : {"Fn::GetAtt" : ["ElasticLoadBalancer", "SourceSecurityGroup.OwnerAlias"]},
          "SourceSecurityGroupName" : {"Fn::GetAtt" : ["ElasticLoadBalancer", "SourceSecurityGroup.GroupName"]}
        } ]
      }
    },
        "myDNS" : {
        "Type" : "AWS::Route53::RecordSetGroup",
        "Properties" : {
          "HostedZoneName" : { "Fn::Join" : [ "", [ { "Ref" : "ZoneApex" }, "." ]]},
          "Comment" : "Zone apex alias targeted to myELB LoadBalancer.",
          "RecordSets" : [
            {
              "Name" : { "Fn::Join" : [ "", [ { "Ref" : "SubDomain" }, ".",  { "Ref" : "ZoneApex" } ]]},
              "Type" : "A",
              "AliasTarget" : {
                  "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
                  "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer","CanonicalHostedZoneName"] }
              }
            }
          ]
        }
    },
    "MaintenanceQueue" : {
    "Type": "AWS::SQS::Queue",
    "Properties": {
      "DelaySeconds": 0,
      "MaximumMessageSize": 262144,
      "MessageRetentionPeriod": 1209600,
      "QueueName": { "Fn::Join" : [ "", [ { "Ref" : "SubDomain" }, "-", { "Ref" : "Repo" }, "-", { "Ref" : "Environment" }, "-", "maint" ] ]},
      "ReceiveMessageWaitTimeSeconds": 20,
      "VisibilityTimeout": 0
      }
    }
    }
}
